function num_valid_configurations(int n) -> int;
// returns the minimum number of moves which suffice in moving a whole Hanoi tower of n disks while visiting each valid configuration precisley once. This is also equal to the number of valid configurations minus one.

callback move_disk(int disk, int peg_from, int peg_to) {
// moves disk <disk> from peg <peg_from> to peg <peg_to>
// we assume the disks are numbered from 1 to n, starting from the smallest
   write disk, peg_from, peg_to;
   flush;
}

function visit_all_configs(int n);
  // starting form the valid configuration in which all <n> disks are orderly placed on rod 1, and moving one disk at the time, make the tower visit each valid configuration precisely once.

main {
    var int n;
    read n;
    var int ans;
    call num_valid_configurations(n) -> ans;
    write ans;
    flush;
    var int n2;
    read n2;
    call visit_all_configs(n2);
}
